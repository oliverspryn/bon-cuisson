<?xml version="1.0" encoding="utf-8"?>
<s:Form xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:pages="components.pages.*"
		width="100%" height="100%" left="{width * 0.1}" xmlns:reviewsservice="services.reviewsservice.*">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.rpc.events.FaultEvent;
			import mx.validators.Validator;
			
			import services.reviewsservice.ReviewsService;
			
			import valueObjects.Reviews;
			
		//We need to globalize a reference to the rating, and update it just before we send it to the server
			[Bindable]
			private var ratingValue:int;
			
		//Allow components to be able to access this data
			public var reviewData:Object;
			
		//Validate the form, and send the data to the server, if validation passed,
		//share this event with the application, reset the form, and given a confirmation
			private function validate(e:MouseEvent):void {
			//Validate the data
				var validationCheck:Array = Validator.validateAll(new Array(reviewerValidator, reviewValidator));
				
				if (validationCheck.length == 0) {
				//Send the data to the server
					this.ratingValue = rating.current;
					sendReviewResponder.token = sendReview.send();
					
				//Dispatch the event
					var date:Date = new Date();
					this.reviewData = new Object();
					this.reviewData.id = 999; // Just make up some ID, since the review list will expect to see it
					this.reviewData.timestamp = int(Math.round(date.getTime() / 1000));
					this.reviewData.name = reviewer.text;
					this.reviewData.rating = this.ratingValue;
					this.reviewData.review = review.text;
					super.dispatchEvent(new Event("reviewProcessed"));
					
				//Reset the form
					reviewer.text = "";
					rating.current = 0;
					review.text = "";
				} else {
					Alert.show("We need a bit more information in the review form.", "Not quite");
				}
			}
			
		//Show an error dialog in the case of an error when communicating with the server
			private function sendReviewErrorHandler(e:FaultEvent):void {
				Alert.show("Fault string: " + e.fault.faultString + "\nFault detail: " + e.fault.faultDetail, e.fault.faultCode);
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="reviewProcessed", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Declarations>
	<!-- Validator components -->
		<mx:StringValidator id="reviewerValidator"
							source="{reviewer}" property="text"
							triggerEvent=""
							requiredFieldError="We'll need your name"/>
		
		<mx:StringValidator id="reviewValidator"
							source="{review}" property="text"
							triggerEvent=""
							requiredFieldError="Can you leave review?"/>
		
	<!-- Use the reviews service from the main application to send data -->
		<s:CallResponder id="sendReviewResponder" fault="sendReviewErrorHandler(event)"/>
		<s:HTTPService id="sendReview" url="services/ReviewProcessor.php" useProxy="false" method="POST">
			<s:request xmlns="">
				<reviewer>{reviewer.text}</reviewer>
				<rating>{this.ratingValue}</rating>
				<review>{review.text}</review>
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	
<!-- Include the required style sheet -->
	<fx:Style source="../../assets/styles/pages/ReviewStyles.css"/>
	
	<s:FormItem label="Name:" styleName="label">
		<s:TextInput id="reviewer" styleName="input"/>
	</s:FormItem>
	
	<s:FormItem label="Rating:" styleName="label">
		<pages:Rating id="rating"/>
	</s:FormItem>
	
	<s:FormItem label="Review:" styleName="label">
		<s:TextArea id="review" styleName="input" height="200" width="320"/>
	</s:FormItem>
	
	<s:FormItem label="">
		<s:Button click="validate(event)" id="submit" label="Share" styleName="button"/>
	</s:FormItem>
</s:Form>
