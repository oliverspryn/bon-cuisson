<?xml version="1.0" encoding="utf-8"?>
<s:Form xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:pages="components.pages.*"
		width="100%">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.validators.Validator;
			
		//We need to globalize a reference to the rating, and update it just before we send it to the server
			[Bindable]
			private var ratingValue:int;
			
		//Allow components to be able to access this data
			public var reviewData:Object;
			
		/**
		 * This method performs the following operations:
		 *  - validate the form
		 * 
		 * If validation passed:
		 *  - send the data to the server
		 *  - share this event with the application
		 *  - reset the form
		 *  - give a confirmation
		 * 
		 * If validation failed:
		 *  - prompt the user to fill in the required values
		*/
			private function validate(e:MouseEvent):void {
			//Validate the data
				var validationCheck:Array = Validator.validateAll(new Array(reviewerValidator, reviewValidator));
				
				if (validationCheck.length == 0) {
				//Send the data to the server
					this.ratingValue = rating.current;
					sendReviewResponder.token = sendReview.send();
					
				//Dispatch the event
					var date:Date = new Date();
					this.reviewData = new Object();
					this.reviewData.id = 999; // Just make up some ID, since the review list will expect to see it
					this.reviewData.name = reviewer.text;
					this.reviewData.rating = this.ratingValue;
					this.reviewData.review = review.text;
					this.reviewData.timestamp = int(Math.round(date.getTime() / 1000));
					
					super.dispatchEvent(new Event("reviewProcessed"));
					
				//Reset the form
					rating.current = 0;
					review.text = "";
					reviewer.text = "";
				} else {
					Alert.show("We need a bit more information in the review form.", "Not quite");
				}
			}
			
		//Show an error dialog in the case of an error when communicating with the server
			private function sendReviewErrorHandler(e:FaultEvent):void {
				Alert.show("The review could not be submitted to the server.\n\nFault code: " +
					e.fault.faultCode + "\nFault details: " + e.fault.faultDetail, e.fault.faultString);
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="reviewProcessed", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Declarations>
	<!-- Validator components -->
		<mx:StringValidator id="reviewerValidator" property="text"
							requiredFieldError="We'll need your name"
							source="{reviewer}" triggerEvent=""/>
		
		<mx:StringValidator id="reviewValidator" property="text"
							requiredFieldError="Could you please leave review?"
							source="{review}" triggerEvent=""/>
		
	<!-- Use the reviews service from the main application to send data -->
		<s:CallResponder fault="sendReviewErrorHandler(event)" id="sendReviewResponder"/>
		<s:HTTPService id="sendReview" method="POST" useProxy="false" url="system/server/processors/reviews.php">
			<s:request>
				<rating>{this.ratingValue}</rating>
				<review>{review.text}</review>
				<reviewer>{reviewer.text}</reviewer>
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	
<!-- Include the required style sheet -->
	<fx:Style source="../../assets/styles/pages/ReviewStyles.css"/>
	
	<s:FormItem label="Name:" styleName="label">
		<s:TextInput id="reviewer" styleName="input"/>
	</s:FormItem>
	
	<s:FormItem label="Rating:" styleName="label">
		<pages:Rating id="rating"/>
	</s:FormItem>
	
	<s:FormItem label="Review:" styleName="label">
		<s:TextArea height="200" id="review" styleName="input" width="320"/>
	</s:FormItem>
	
	<s:FormItem label="">
		<s:Button click="validate(event)" id="submit" label="Share" styleName="button"/>
	</s:FormItem>
</s:Form>