<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:header="components.header.*"
			   xmlns:pages="components.pages.*"
			   backgroundColor="0x141414" minHeight="600" minWidth="955" skinClass="skins.Theme"
			   creationComplete="init(event)">
	<fx:Script>
		<![CDATA[
			import com.asual.swfaddress.SWFAddress;
			import com.asual.swfaddress.SWFAddressEvent;
			import com.forwardfour.Config;
			import com.forwardfour.events.MenuEvent;
			import com.forwardfour.events.NetworkEvent;
			import com.forwardfour.utils.ModuleBase;
			
			import mx.events.FlexEvent;
			
		//Globalize a reference to the page content
			private var pageObject:ModuleBase = null;
			
		//Instantiate the configuration class
			public var config:Config = new Config();
			
		/**
		 * Initialization
		 * -------------------------------
		*/
			
		//Initialize SWFAddress and grab the page listed from the URL
			private function init(event:FlexEvent):void {				
				SWFAddress.addEventListener(SWFAddressEvent.INIT, initSWFAddress);
			}
			
			private function initSWFAddress(e:SWFAddressEvent):void {
			//Listen for change events
				SWFAddress.addEventListener(SWFAddressEvent.CHANGE, URLNavigateToPageHandler);
				
			//Get information about the selected menu item and navigate to that page
				var info:Object = menu.getInfoForItemByIndex();
				this.navigateToPage(info.pageType, info.pageID);
			}
			
		//Get the hijaxed URL of the current page
			private function get URL():String {
				var URL:String = SWFAddress.getValue();
				
				if (URL == "" || URL == "/") {
					return "";
				} else {
					return URL.substring(1);
				}
			}
			
		/**
		 * Navigation handlers
		 * -------------------------------
		*/
			
		//Go to a specific page when a menu item has been clicked
			private function menuNavigateToPageHandler(e:MenuEvent):void {
				var info:Object = menu.getInfoForItemByIndex();
				this.navigateToPage(info.pageType, info.pageID);
			}
			
		//Request a page when the URL has changed
			private function URLNavigateToPageHandler(e:SWFAddressEvent):void {
				var info:Object = menu.getInfoForItemByURL(this.URL);
				this.navigateToPage(info.pageType, info.pageID);
			}
			
		//Process the page navigation request
			private function navigateToPage(pageType:String, pageID:int):void {
				switch(pageType) {
					case "home" : 
						homePage.load("services/home.php");
						homePage.addEventListener("loadComplete", transitionPages);
						this.pageObject = homePage;
						break;
					
					default : 
						break;
				}
			}
			
		//Transition the old page away and the new one into view
			private function transitionPages(e:NetworkEvent):void {
				this.pageObject.transitionIn();
			}
		]]>
	</fx:Script>
	
<!-- Include the navigation menu -->
	<header:Menu id="menu" top="0" menuItemClicked="menuNavigateToPageHandler(event)"/>
	
<!-- We'll use these components as we need them -->
	<s:Group width="100%" top="60">
		<pages:Home alpha="0" id="homePage" y="20"/>
		<pages:FoodMenu id="menuPage" alpha="0" y="20" visible="false"/>
		<pages:Lunches id="lunchesPage" alpha="0" y="20" visible="false"/>
		<pages:Reviews id="reviewsPage" alpha="0" y="20" visible="false"/>
	</s:Group>
</s:Application>